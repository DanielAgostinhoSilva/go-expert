# syntax=docker/dockerfile:1

ARG GO_VERSION=1.22.0
FROM --platform=$BUILDPLATFORM golang:${GO_VERSION} AS build
WORKDIR /src

RUN --mount=type=cache,target=/go/pkg/mod/ \
    --mount=type=bind,source=go.sum,target=go.sum \
    --mount=type=bind,source=go.mod,target=go.mod \
    go mod download -x

ARG TARGETARCH

# Instalação do Delve
RUN go install github.com/go-delve/delve/cmd/dlv@latest

RUN --mount=type=cache,target=/go/pkg/mod/ \
    --mount=type=bind,target=. \
    CGO_ENABLED=0 GOARCH=$TARGETARCH go build -gcflags "all=-N -l" -o /bin/server ./cmd/server

FROM alpine:latest AS final

RUN apk --update add \
    ca-certificates \
    tzdata \
    libc6-compat && \
    update-ca-certificates

COPY --from=build /bin/server /bin/
COPY --from=build /go/bin/dlv /bin/dlv

EXPOSE 8080 40000

# Escuta em 0.0.0.0 para depuração remota
ENTRYPOINT ["/bin/dlv", "exec", "/bin/server", "--headless", "--listen=0.0.0.0:40000", "--api-version=2", "--accept-multiclient"]